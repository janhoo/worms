% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wormsbynames.R
\name{wormsbynames}
\alias{wormsbynames}
\title{GET AphiaRecordsByNames}
\usage{
wormsbynames(taxon_names, verbose = TRUE, chunksize = 50, like = "false",
  marine_only = "true", sleep_btw_chunks_in_sec = 0.1)
}
\arguments{
\item{taxon_names}{character vector with names of taxa to look up.}

\item{verbose}{be verbose}

\item{chunksize}{only 50 taxa can be looked up per request, so request are split up into chunks (should be 50 or less)}

\item{like}{Add a "\%"-sign after the ScientificName (SQL LIKE function). Default=true}

\item{marine_only}{Limit to marine taxa. Default=true}

\item{sleep_btw_chunks_in_sec}{pause between requests}
}
\value{
a data frame.
}
\description{
takes character vector with taxon names and retrives AphiaRecords from WoRMS
}
\details{
This function will take a character vector with taxon names, 
retrive AphiaRecords from www.marinespecies.org using the 
GET /AphiaRecordsByName/{ScientificName} Method described at
http://www.marinespecies.org/rest/.
Results will be outbut to a data.frame with each row being a record.
For each name given, only the first AphiaRecord will be retrived. Further records about 
deleted and ressurected ids are not preserved
For each given scientific name, try to find one or more AphiaRecords. This allows you to match multiple names in one call.
GET taxonomic information from WORMS
}
\examples{
taxon_names<-c("Abietinaria abietina",  "Abludomelita" , "Abludomelita obtusata", "Garbage", "Abra alba" )
w<-wormsbynames(taxon_names)
## unrecognized returns
failed_species<-rownames(w[is.na(w[,1]),])

## this is how to load taxon_names from file
write.csv(taxon_names,file="tax.csv", 
        row.names=FALSE,
        na = "", 
        fileEncoding="UTF8")
## check it out, the load it
read.csv(file="tax.csv",
        na = "", 
        fileEncoding="UTF8",
        stringsAsFactors=FALSE,
        col.names=FALSE)
## save results to file to inspect with, e.g. spreadsheet software
write.csv(taxon_names,file="tax.csv", 
        row.names=FALSE,
        na = "", 
        fileEncoding="UTF8",
        col.names=TRUE,
        row.names=TRUE)

}

